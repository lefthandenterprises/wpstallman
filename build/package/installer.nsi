; build/package/installer.nsi  (unified, meta-driven)

; ─────────────────────────────────────────────────────────────
; Optional meta include generated by package_nsis.sh
; (contains !define COMPANY_NAME, PRODUCT_NAME, PRODUCT_VERSION, etc.)
; ─────────────────────────────────────────────────────────────
!ifdef INCLUDE_META
  !include "${INCLUDE_META}"
!endif

!include "MUI2.nsh"
!include "FileFunc.nsh"
!include "x64.nsh"

; ─────────────────────────────────────────────────────────────
; Defines (defaults only if not provided via -D on makensis)
; Keep these names in sync with package_nsis.sh
; ─────────────────────────────────────────────────────────────
!ifndef APP_NAME
  !ifdef PRODUCT_NAME
    !define APP_NAME "${PRODUCT_NAME}"
  !else
    !define APP_NAME "W.P. Stallman"
  !endif
!endif

!ifndef COMPANY_NAME
  !ifdef COMPANY_NAME
    ; value may already come from INCLUDE_META
  !else
    !define COMPANY_NAME "Left Hand Enterprises, LLC"
  !endif
!endif

!ifndef APP_ID
  !define APP_ID "com.wpstallman.app"
!endif

!ifndef APP_VERSION
  !ifdef PRODUCT_VERSION
    !define APP_VERSION "${PRODUCT_VERSION}"
  !else
    !define APP_VERSION "1.0.0"
  !endif
!endif

; VIProductVersion must be 4-part numeric
!ifndef VI_VERSION
  !define VI_VERSION "1.0.0.0"
!endif

; Staging dir prepared by package_nsis.sh (contains launcher + gtk4.1/gtk4.0)
!ifndef APP_STAGE
  !define APP_STAGE ".\stage"
!endif

; Output file path provided by packer
!ifndef OUT_EXE
  !define OUT_EXE "WPStallman-${APP_VERSION}-setup-win-x64.exe"
!endif

; Entry executable inside install dir (use launcher by default)
!ifndef APP_EXE
  !define APP_EXE "WPStallman.Launcher.exe"
!endif

; Additional identity bits
!ifndef FILEDESCRIPTION
  !define FILEDESCRIPTION "${APP_NAME} Installer"
!endif
!ifndef HOMEPAGE
  !ifdef PUBLISHER_URL
    !define HOMEPAGE "${PUBLISHER_URL}"
  !else
    !define HOMEPAGE "https://lefthandenterprises.com/projects/wpstallman"
  !endif
!endif

!define UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APP_ID}"

; ─────────────────────────────────────────────────────────────
; General
; ─────────────────────────────────────────────────────────────
Name "${APP_NAME}"
OutFile "${OUT_EXE}"

; Version info embedded in the EXE
VIProductVersion "${VI_VERSION}"
VIFileVersion    "${VI_VERSION}"
VIAddVersionKey "CompanyName"      "${COMPANY_NAME}"
VIAddVersionKey "FileDescription"  "${FILEDESCRIPTION}"
VIAddVersionKey "ProductName"      "${APP_NAME}"
VIAddVersionKey "ProductVersion"   "${APP_VERSION}"
VIAddVersionKey "OriginalFilename" "WPStallman-Setup-${APP_VERSION}.exe"
VIAddVersionKey "LegalCopyright"   "© 2025 ${COMPANY_NAME}"
VIAddVersionKey "Comments"         "${HOMEPAGE}"

RequestExecutionLevel admin
InstallDir "$PROGRAMFILES64\${APP_NAME}"
InstallDirRegKey HKLM "${UNINST_KEY}" "InstallLocation"
SetCompressor /SOLID lzma

; ─────────────────────────────────────────────────────────────
; UI
; ─────────────────────────────────────────────────────────────
!define MUI_ABORTWARNING
!insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_INSTFILES
!insertmacro MUI_PAGE_FINISH

!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES
!insertmacro MUI_UNPAGE_FINISH
!insertmacro MUI_LANGUAGE "English"

; ─────────────────────────────────────────────────────────────
; Install
; ─────────────────────────────────────────────────────────────
Section "Install"
  SetOutPath "$INSTDIR"

  ; Copy staged payload: launcher, gtk4.1, gtk4.0, LICENSE.txt, etc.
  ; (Packer excludes PDB/XML; do it here as well)
  File /r /x "*.pdb" /x "*.xml" "${APP_STAGE}\*.*"

  ; Create shortcuts
  CreateDirectory "$SMPROGRAMS\${APP_NAME}"
  CreateShortCut "$SMPROGRAMS\${APP_NAME}\${APP_NAME}.lnk" "$INSTDIR\${APP_EXE}"
  CreateShortCut "$DESKTOP\${APP_NAME}.lnk" "$INSTDIR\${APP_EXE}"

  ; Uninstall registration
  WriteRegStr HKLM "${UNINST_KEY}" "DisplayName" "${APP_NAME}"
  WriteRegStr HKLM "${UNINST_KEY}" "DisplayVersion" "${APP_VERSION}"
  WriteRegStr HKLM "${UNINST_KEY}" "Publisher" "${COMPANY_NAME}"
  WriteRegStr HKLM "${UNINST_KEY}" "InstallLocation" "$INSTDIR"
  WriteRegStr HKLM "${UNINST_KEY}" "DisplayIcon" "$INSTDIR\${APP_EXE}"
  WriteRegStr HKLM "${UNINST_KEY}" "UninstallString" "$INSTDIR\Uninstall.exe"

  WriteUninstaller "$INSTDIR\Uninstall.exe"
SectionEnd

; ─────────────────────────────────────────────────────────────
; Uninstall
; ─────────────────────────────────────────────────────────────
Section "Uninstall"
  Delete "$DESKTOP\${APP_NAME}.lnk"
  RMDir /r "$SMPROGRAMS\${APP_NAME}"
  RMDir /r "$INSTDIR"
  DeleteRegKey HKLM "${UNINST_KEY}"
SectionEnd
